{"version":3,"sources":["../src/reports_list.js"],"names":["init","document","addEventListener","event","reportCreate","target","closest","reportSelectors","actions","preventDefault","reportModal","events","FORM_SUBMITTED","window","location","href","detail","show","reportEdit","dataset","reportId","reportElement","regions","report","then","addToast","reportEvents","tableReload","preservePagination","catch","Notification","exception","reportDelete","key","component","param","reportName","confirmTitle","confirmText","confirmButton","confirm","pendingPromise","Pending","resolve"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder reports list management\n *\n * @module      core_reportbuilder/reports_list\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {deleteReport} from 'core_reportbuilder/local/repository/reports';\nimport {createReportModal} from 'core_reportbuilder/local/repository/modals';\n\n/**\n * Initialise module\n */\nexport const init = () => {\n    document.addEventListener('click', event => {\n        const reportCreate = event.target.closest(reportSelectors.actions.reportCreate);\n        if (reportCreate) {\n            event.preventDefault();\n\n            // Redirect user to editing interface for the report after submission.\n            const reportModal = createReportModal(event.target, getString('newreport', 'core_reportbuilder'));\n            reportModal.addEventListener(reportModal.events.FORM_SUBMITTED, event => {\n                window.location.href = event.detail;\n            });\n\n            reportModal.show();\n        }\n\n        const reportEdit = event.target.closest(reportSelectors.actions.reportEdit);\n        if (reportEdit) {\n            event.preventDefault();\n\n            // Reload current report page after submission.\n            const reportModal = createReportModal(event.target, getString('editreportdetails', 'core_reportbuilder'),\n                reportEdit.dataset.reportId);\n            reportModal.addEventListener(reportModal.events.FORM_SUBMITTED, () => {\n                const reportElement = event.target.closest(reportSelectors.regions.report);\n\n                getString('reportupdated', 'core_reportbuilder')\n                    .then(addToast)\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return;\n                    })\n                    .catch(Notification.exception);\n            });\n\n            reportModal.show();\n        }\n\n        const reportDelete = event.target.closest(reportSelectors.actions.reportDelete);\n        if (reportDelete) {\n            event.preventDefault();\n\n            getStrings([\n                {key: 'deletereport', component: 'core_reportbuilder'},\n                {key: 'deletereportconfirm', component: 'core_reportbuilder', param: reportDelete.dataset.reportName},\n                {key: 'delete', component: 'moodle'},\n            ]).then(([confirmTitle, confirmText, confirmButton]) => {\n                Notification.confirm(confirmTitle, confirmText, confirmButton, null, () => {\n                    const pendingPromise = new Pending('core_reportbuilder/reports:delete');\n                    const reportElement = event.target.closest(reportSelectors.regions.report);\n\n                    deleteReport(reportDelete.dataset.reportId)\n                        .then(() => getString('reportdeleted', 'core_reportbuilder'))\n                        .then(addToast)\n                        .then(() => {\n                            pendingPromise.resolve();\n                            dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                            return;\n                        })\n                        .catch(Notification.exception);\n                });\n                return;\n            }).catch(Notification.exception);\n        }\n    });\n};\n"],"file":"reports_list.min.js"}