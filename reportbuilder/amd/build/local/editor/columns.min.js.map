{"version":3,"sources":["../../../src/local/editor/columns.js"],"names":["init","reportElement","initialized","addEventListener","event","reportAddColumn","target","closest","reportSelectors","actions","preventDefault","pendingPromise","Pending","dataset","reportId","uniqueIdentifier","then","data","reportEvents","publish","reportColumnsUpdated","name","addToast","tableReload","preservePagination","resolve","catch","Notification","exception","reportRemoveColumn","columnHeader","regions","columnName","key","component","param","confirmTitle","confirmText","confirmButton","confirm","columnId","columnSortableList","SortableList","reportTable","isHorizontal","getElementName","element","Promise","on","EVENTS","DRAG","info","columnPosition","targetColumnPosition","targetNextElement","find","each","cell","children","beforeCell","insertBefore","appendChild","DROP","positionChanged","siblings","length","inplaceEditableEvents","elementUpdated","columnAggregation"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder columns editor\n *\n * @module      core_reportbuilder/local/editor/columns\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport {eventTypes as inplaceEditableEvents} from 'core/local/inplace_editable/events';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {publish} from 'core/pubsub';\nimport SortableList from 'core/sortable_list';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {addColumn, deleteColumn, reorderColumn} from 'core_reportbuilder/local/repository/columns';\n\n/**\n * Initialise module\n *\n * @param {Element} reportElement\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = (reportElement, initialized) => {\n    if (initialized) {\n        return;\n    }\n\n    reportElement.addEventListener('click', event => {\n\n        // Add column to report.\n        const reportAddColumn = event.target.closest(reportSelectors.actions.reportAddColumn);\n        if (reportAddColumn) {\n            event.preventDefault();\n\n            const pendingPromise = new Pending('core_reportbuilder/columns:add');\n\n            addColumn(reportElement.dataset.reportId, reportAddColumn.dataset.uniqueIdentifier)\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                .then(() => getString('columnadded', 'core_reportbuilder', reportAddColumn.dataset.name))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n\n        // Remove column from report.\n        const reportRemoveColumn = event.target.closest(reportSelectors.actions.reportRemoveColumn);\n        if (reportRemoveColumn) {\n            event.preventDefault();\n\n            const columnHeader = reportRemoveColumn.closest(reportSelectors.regions.columnHeader);\n            const columnName = columnHeader.dataset.columnName;\n\n            getStrings([\n                {key: 'deletecolumn', component: 'core_reportbuilder', param: columnName},\n                {key: 'deletecolumnconfirm', component: 'core_reportbuilder', param: columnName},\n                {key: 'delete', component: 'moodle'},\n            ]).then(([confirmTitle, confirmText, confirmButton]) => {\n                Notification.confirm(confirmTitle, confirmText, confirmButton, null, () => {\n                    const pendingPromise = new Pending('core_reportbuilder/columns:remove');\n\n                    deleteColumn(reportElement.dataset.reportId, columnHeader.dataset.columnId)\n                        .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                        .then(() => getString('columndeleted', 'core_reportbuilder', columnName))\n                        .then(addToast)\n                        .then(() => {\n                            dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                            return pendingPromise.resolve();\n                        })\n                        .catch(Notification.exception);\n                });\n                return;\n            }).catch(Notification.exception);\n        }\n    });\n\n    // Initialize sortable list to handle column moving (note JQuery dependency, see MDL-72293 for resolution).\n    var columnSortableList = new SortableList(`${reportSelectors.regions.reportTable} thead tr`, {isHorizontal: true});\n    columnSortableList.getElementName = element => Promise.resolve(element.data('columnName'));\n\n    $(reportElement).on(SortableList.EVENTS.DRAG, 'th[data-column-id]', (event, info) => {\n        const columnPosition = info.element.data('columnPosition');\n        const targetColumnPosition = info.targetNextElement.data('columnPosition');\n\n        $(reportElement).find('tbody tr').each(function() {\n            const cell = $(this).children(`td.c${columnPosition - 1}`)[0];\n            if (targetColumnPosition) {\n                var beforeCell = $(this).children(`td.c${targetColumnPosition - 1}`)[0];\n                this.insertBefore(cell, beforeCell);\n            } else {\n                this.appendChild(cell);\n            }\n        });\n    });\n\n    $(reportElement).on(SortableList.EVENTS.DROP, 'th[data-column-id]', (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_reportbuilder/columns:reorder');\n\n            const columnId = info.element.data('columnId');\n            const columnName = info.element.data('columnName');\n            const columnPosition = info.element.data('columnPosition');\n\n            // Select target position, if moving to the end then count number of element siblings.\n            let targetColumnPosition = info.targetNextElement.data('columnPosition') || info.element.siblings().length + 2;\n            if (targetColumnPosition > columnPosition) {\n                targetColumnPosition--;\n            }\n\n            reorderColumn(reportElement.dataset.reportId, columnId, targetColumnPosition)\n                .then(() => getString('columnmoved', 'core_reportbuilder', columnName))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n    });\n\n    // Initialize inplace editable listeners for column aggregation.\n    reportElement.addEventListener(inplaceEditableEvents.elementUpdated, event => {\n\n        const columnAggregation = event.target.closest('[data-itemtype=\"columnaggregation\"]');\n        if (columnAggregation) {\n            const columnHeader = columnAggregation.closest(reportSelectors.regions.columnHeader);\n\n            getString('columnaggregated', 'core_reportbuilder', columnHeader.dataset.columnName)\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                    return;\n                })\n                .catch(Notification.exception);\n        }\n    });\n};\n"],"file":"columns.min.js"}